@model GeneralTrainerViewModel
@{
    ViewBag.Title = Model.GeneralTrainerMasterId > 0 ? "Update Trainer" : "Add Trainer";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    DropdownViewModel centreDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.AccessibleCentre.ToString(), DropdownName = "SelectedCentreCode", DropdownSelectedValue = Model.SelectedCentreCode, ChangeEvent = "CoditechCommon.GetDepartmentByCentreCode()", IsDisabled = Model.GeneralTrainerMasterId > 0 };
    DropdownViewModel departmentDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.CentrewiseDepartment.ToString(), DropdownName = "SelectedDepartmentId", DropdownSelectedValue = Convert.ToString(Model.SelectedDepartmentId), Parameter = Model.SelectedCentreCode, ChangeEvent = "GeneralTrainerMaster.GetEmployeeListByCentreCodeAndDepartmentId()", IsDisabled = Model.GeneralTrainerMasterId > 0 };
PageHeaderViewModel headerModel = new PageHeaderViewModel
    {
        Title = ViewBag.Title,
        SaveButtonText = GeneralResources.SaveButtonText,
        CancelUrl = Url.Action(AdminConstants.ActionRedirectToList, controllerName ,new {SelectedCentreCode = Model.SelectedCentreCode,SelectedDepartmentId = Model.SelectedDepartmentId}),
        CancelButtonText = GeneralResources.CancelButtonText,
        ControllerName = controllerName,
        ActionName = actionName,
        FormId = AdminConstants.FormId + controllerName,
    };
}
<!-- Page Content-->
<div class="page-content">
    <div class="container-fluid mt-5">
        <div class="row">
            <div class="col-lg-12">
                <div class="card-body">
                    @using (Html.BeginForm(actionName, controllerName, FormMethod.Post, new { id = headerModel.FormId }))
                    {
                        @Html.Partial("~/Views/Shared/_SaveAndCloseButtonLayout.cshtml", headerModel)                            
                        @Html.HiddenFor(m => m.GeneralTrainerMasterId)
                            @if (Model.GeneralTrainerMasterId > 0)
                            {
                                @Html.HiddenFor(m => m.SelectedCentreCode)
                                @Html.HiddenFor(m => m.SelectedDepartmentId)
                                @Html.HiddenFor(m => m.FirstName)
                                @Html.HiddenFor(m => m.LastName)
                            }
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.SelectedCentreCode, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", centreDropdown)
                                        @Html.ValidationMessageFor(x => x.SelectedCentreCode)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.SelectedDepartmentId, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", departmentDropdown)
                                        @Html.ValidationMessageFor(x => x.SelectedDepartmentId)
                                    </div>
                                </div>
                                @if (Model.GeneralTrainerMasterId <= 0)
                                {
                                    <div class="col-lg-6">
                                        <div class="mb-3">
                                            @Html.LabelFor(x => x.EmployeeId, new { @class = "form-label required" })
                                            @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                               {
                                   DropdownType = DropdownTypeEnum.UnAssociatedTrainerEmployeeList.ToString(),
                                   DropdownName = "EmployeeId",
                                   DropdownSelectedValue = Model.EmployeeId.ToString(),
                                   IsRequired = true,
                                   Parameter = !string.IsNullOrEmpty(Model.SelectedCentreCode) ? $"{Model.SelectedCentreCode}~{Model.SelectedDepartmentId}" : ""
                               })
                                            @Html.ValidationMessageFor(x => x.EmployeeId)
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    @Html.HiddenFor(x => x.EmployeeId)
                                }
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.TrainerSpecializationEnumId, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                               {
                                   DropdownSelectedValue = Model.TrainerSpecializationEnumId.ToString(),
                                   DropdownName = "TrainerSpecializationEnumId",
                                   IsRequired = true,
                                   GroupCode = DropdownTypeEnum.TrainerSpecialization.ToString()
                               })
                                        @Html.ValidationMessageFor(x => x.TrainerSpecializationEnumId)
                                    </div>
                                </div>

                                @if (Model.GeneralTrainerMasterId > 0)
                                {
                                    <div class="col-lg-6">
                                        <div class="mb-3">
                                            @Html.LabelFor(x => x.UniqueCode, new { @class = "form-label" })
                                            @Html.TextBoxFor(x => x.UniqueCode, new { @class = "form-control", @readonly = "true" })
                                            @Html.ValidationMessageFor(x => x.UniqueCode)
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    @Html.HiddenFor(x => x.UniqueCode)
                                }
                            </div>
                                    }
                    </div>
                </div>
            </div>
        </div>
    </div>
<script src="~/js/coditech/General/GeneralTrainerMaster.js"></script>


