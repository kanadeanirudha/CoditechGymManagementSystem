@using Coditech.Admin.Utilities;
@model GymWorkoutPlanViewModel
@{
    ViewBag.Title = Model.GymWorkoutPlanId > 0 ? "Update Gym Workout Plan" : "Create Gym Workout Plan";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    string css = Model.GymWorkoutPlanId > 0 ? "col-lg-10" : "col-lg-12";
    Dictionary<string, string> keyValuePairs = new Dictionary<string, string>();
    keyValuePairs.Add("GymWorkoutPlanId", Model.GymWorkoutPlanId.ToString());
    DropdownViewModel centreDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.AccessibleCentre.ToString(), DropdownName = "CentreCode", DropdownSelectedValue = Model.CentreCode, ChangeEvent = "", IsDisabled = Model.GymWorkoutPlanId > 0, IsRequired = true };
}
<!-- Page Content-->
<div class="page-content mt-5">
    <div class="container-fluid">
        <div class="row">
            @if (Model.GymWorkoutPlanId > 0)
            {
                <div class="col-lg-2">
                    @Html.Partial("~/Views/Gym/GymWorkoutPlan/_GymWorkoutPlanSidePannel.cshtml", keyValuePairs)
                </div>
            }
            <div class="@css">
                <div class="card">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col">
                                @if (Model.GymWorkoutPlanId > 0)
                                {
                                    <h4 class="card-title"><span>Update Workout Plan</span></h4>
                                }
                                else
                                {
                                    <h4 class="card-title">Create Workout Plan</h4>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
                        {
                            @Html.HiddenFor(m => m.GymWorkoutPlanId)

                            if (Model.GymWorkoutPlanId > 0)
                            {
                                @Html.HiddenFor(m => m.CentreCode)
                                @Html.HiddenFor(m => m.NumberOfWeeks)
                                @Html.HiddenFor(m => m.NumberOfDaysPerWeek)

                            }
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.CentreCode, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", centreDropdown)
                                        @Html.ValidationMessageFor(x => x.CentreCode)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.WorkoutPlanName, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.WorkoutPlanName, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.WorkoutPlanName)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.Target, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.Target, new { @class = "form-control", placeholder = "Enter Target Weight Here" })
                                        @Html.ValidationMessageFor(x => x.Target)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.NumberOfWeeks, new { @class = "form-label required" })
                                        @if (Model.GymWorkoutPlanId > 0)
                                        {
                                            @Html.TextBoxFor(x => x.NumberOfWeeks, new { @class = "form-control", @readonly = "readonly" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(x => x.NumberOfWeeks, new { @class = "form-control", @min = "1", @max = "104" })
                                        }
                                        @Html.ValidationMessageFor(x => x.NumberOfWeeks)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.NumberOfDaysPerWeek, new { @class = "form-label required" })
                                        @if (Model.GymWorkoutPlanId > 0)
                                        {
                                            @Html.TextBoxFor(x => x.NumberOfDaysPerWeek, new { @class = "form-control", @readonly = "readonly" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(x => x.NumberOfDaysPerWeek, new { @class = "form-control", @min = "1", @max = "7" })
                                        }                                      
                                        @Html.ValidationMessageFor(x => x.NumberOfDaysPerWeek)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.IsActive, new { @class = "form-label" })
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.IsActive, new { @class = "form-check-input" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-success">@AdminResources.LabelSave</button>
                            <a href="../@controllerName/Cancel?SelectedCentreCode=@Model.CentreCode" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




