@model OrganisationCentrewiseSmtpSettingViewModel
@{
    ViewBag.Title = "Organisation Centrewise Smtp Setting";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    ModelPopUpViewModel sendTestEmail = new ModelPopUpViewModel() { ModelPopUpId = "SendDetailsPopupId", ModalContentId = "SendDetailsContentId" };
    PageHeaderViewModel headerModel = new PageHeaderViewModel
            {
                Title = ViewBag.Title,
                SaveButtonText = GeneralResources.SaveButtonText,
                CancelUrl = Url.Action(AdminConstants.ActionRedirectToList, controllerName),
                CancelButtonText = GeneralResources.CancelButtonText,
                ControllerName = controllerName,
                ActionName = actionName,
                FormId = AdminConstants.FormId + controllerName,
            };
}
<div class="page-content">
    <div class="container-fluid mt-5">
        <div class="row">
            @if (Model.OrganisationCentreMasterId > 0)
            {
                <div class="col-lg-2">
                    @Html.Partial("~/Views/Organisation/OrganisationCentre/_OrganisationCentreSidePannel.cshtml", Model.OrganisationCentreMasterId.ToString())
                </div>
            }
            <div class="col-lg-10">
                <div class="card">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col">
                                <h4 class="card-title">Organisation Centrewise Smtp Setting</h4>
                            </div><!--end col-->
                        </div><!--end row-->
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post, new { id = headerModel.FormId }))
                        {
                            @Html.Partial("~/Views/Shared/_SaveAndCloseButtonLayout.cshtml", headerModel)
                            @Html.HiddenFor(m => m.OrganisationCentrewiseSmtpSettingId)
                            @Html.HiddenFor(m => m.OrganisationCentreMasterId)
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.CentreName, new { @class = "form-label " })
                                        @Html.TextBoxFor(x => x.CentreName, new { @class = "form-control", @disabled = "disabled" })
                                        @Html.ValidationMessageFor(x => x.CentreName)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.CentreCode, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.CentreCode, new { @class = "form-control", @readonly = "readonly" })
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.Port, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.Port, new { @class = "form-control", @type = "number", @maxlength = "4" })
                                        @Html.ValidationMessageFor(x => x.Port)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.ServerName, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.ServerName, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.ServerName)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.UserName, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.UserName, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.UserName)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.Password, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.Password, new { @class = "form-control", @onkeypress = "return CoditechCommon.AvoidSpacing()" })
                                        @Html.ValidationMessageFor(x => x.Password)
                                    </div>
                                </div>

                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.FromDisplayName, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.FromDisplayName, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.FromDisplayName)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.FromEmailAddress, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.FromEmailAddress, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.FromEmailAddress)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.BccEmailAddress, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.BccEmailAddress, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.BccEmailAddress)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.IsEnableSsl, new { @class = "form-label" })
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.IsEnableSsl, new { @class = "form-check-input" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.DisableAllEmails, new { @class = "form-label" })
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.DisableAllEmails, new { @class = "form-check-input" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 d-flex justify-content-center">
                                    <div class="mb-6">
                                        <button type="button"
                                                class="btn btn-gradient-info"
                                                data-bs-toggle="modal"
                                                data-bs-target="#@sendTestEmail.ModelPopUpId"
                                                onclick="OrganisationCentre.SendTestEmail('@sendTestEmail.ModalContentId','@Model.CentreCode','@Model.OrganisationCentreMasterId')"
                                                title="Send Test Email">
                                            Send Test Email
                                        </button>
                                    </div>
                                </div>
                            </div>
                        @*     <button type="submit" class="btn btn-success">@AdminResources.LabelSave</button> *@
                        @*     <a href="@Url.Action("List", controllerName)" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a> *@
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.Partial("~/Views/Shared/_ModelPopUp.cshtml", sendTestEmail)
<script src="~/js/Coditech/Organisation/OrganisationCentre.js"></script>
